import Text "mo:base/Text";
import Char "mo:base/Char";
import Blob "mo:base/Blob";
import Principal "mo:base/Principal";
import Array "mo:base/Array";
import Buffer "mo:base/Buffer";
import Iter "mo:base/Iter";
import Nat8 "mo:base/Nat8";
import Nat16 "mo:base/Nat16";
import Nat32 "mo:base/Nat32";
import CertifiedData "mo:base/CertifiedData";
import CertTree "mo:ic-certification/CertTree";
import ReqData "mo:ic-certification/ReqData";
import CanisterSigs "mo:ic-certification/CanisterSigs";
import MerkleTree "mo:ic-certification/MerkleTree";
import Debug "mo:base/Debug";

import EncodingUtils "EncodingUtils";

module {

  public type HeaderField = (Text, Text);

  public type StreamingStrategy = {
    #Callback : {
      callback : StreamingCallback;
      token : StreamingCallbackToken;
    };
  };

  public type StreamingCallback = query (StreamingCallbackToken) -> async (StreamingCallbackResponse);

  public type StreamingCallbackToken = {
    content_encoding : Text;
    index : Nat;
    key : Text;
  };

  public type StreamingCallbackResponse = {
    body : Blob;
    token : ?StreamingCallbackToken;
  };

  public type Request = {
    body : Blob;
    headers : [HeaderField];
    method : Text;
    url : Text;
  };

  public type Response = {
    body : Blob;
    headers : [HeaderField];
    streaming_strategy : ?StreamingStrategy;
    status_code : Nat16;
  };

  // 200 OK response with picture
  public func httpImgResponse(pic : Blob, url : Text, ct : CertTree.Ops) : Response {
    {
      body = pic;
      headers = [
        ("Content-Type", getImageMimeType(decodeFileExtension(url))),
        ("Access-Control-Allow-Origin", "*"),
        createCertificationHeader(url, ct),
      ];
      status_code = 200;
      streaming_strategy = null;
    };
  };

  public func httpIcDomainsResponse(url : Text, ct : CertTree.Ops) : Response {
    {
      body = Text.encodeUtf8("img.nostric.app\nimg.dev.nostric.app");
      headers = [
        ("Content-Type", "application/octet-stream"),
        ("Access-Control-Allow-Origin", "*"),
        createCertificationHeader(url, ct),
      ];
      status_code = 200;
      streaming_strategy = null;
    };
  };

  // 404 Not Found response
  public func httpNotFoundResponse(msg : ?Text, url : Text, ct : CertTree.Ops) : Response {
    {
      body = Text.encodeUtf8(
        switch (msg) {
          case (?msg) msg;
          case null "Not found.";
        }
      );
      headers = [("Content-Type", "text/plain"), createCertificationHeader(url, ct)];
      status_code = 404;
      streaming_strategy = null;
    };
  };

  public func getFavicon() : Blob {
    let faviconBase64 = "
    return EncodingUtils.decodeBase64(faviconBase64);
  };

  private func decodeFileExtension(url : Text) : Text {
    let filePathSplit = Iter.toArray(Text.split(url, #char '.'));
    if (Array.size(filePathSplit) != 2) {
      return "";
    };
    let attributeSplit = Iter.toArray(Text.split(filePathSplit[1], #char '?'));
    return "." # attributeSplit[0];
  };

  private func getImageMimeType(extension : Text) : Text {
    switch (extension) {
      case ".aac" { "audio/aac" };
      case ".abw" { "application/x-abiword" };
      case ".apng" { "image/apng" };
      case ".arc" { "application/x-freearc" };
      case ".avif" { "image/avif" };
      case ".bmp" { "image/bmp" };
      case ".gif" { "image/gif" };
      case ".ico" { "image/x-icon" };
      case ".jpg" { "image/jpeg" };
      case ".jpeg" { "image/jpeg" };
      case ".png" { "image/png" };
      case ".svg" { "image/svg+xml" };
      case "tif" { "image/tiff" };
      case ".tif" { "image/tiff" };
      case ".webp" { "image/webp" };
      case _ { "application/octet-stream" }; // Default MIME type for unknown extensions
    };
  };

  private func createCertificationHeader(url : Text, ct : CertTree.Ops) : HeaderField {
    if (ct.lookup(["http_assets", Text.encodeUtf8(url)]) == null) {
      return ("X-HTTP-Fallback", "true");
    };
    let witness = ct.reveal(["http_assets", Text.encodeUtf8(url)]);
    let encoded = ct.encodeWitness(witness);
    let cert = switch (CertifiedData.getCertificate()) {
      case (?c) c;
      case null {
        "getCertificate failed. Call this as a query call!" : Blob;
      };
    };
    let result : HeaderField = (
      "ic-certificate",
      "certificate=:" # EncodingUtils.encodeBase64(cert) # ":, " #
      "tree=:" # EncodingUtils.encodeBase64(encoded) # ":",
    );
    Debug.print(
      "certificate=:" # EncodingUtils.encodeBase64(cert) # ":, " #
      "tree=:" # EncodingUtils.encodeBase64(encoded) # ":"
    );
    return result;

  };
};
